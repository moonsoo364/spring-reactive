buildscript {
	ext {
		springBootVersion = '2.1.9.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext {
	reactorExtraVersion = '3.2.3.RELEASE'
	springBootAdminVersion = '2.1.6' // Spring Boot Admin 2.1.x는 Boot 2.1.x와 호환
	springCloudVersion = 'Greenwich.SR3' // Boot 2.1.9와 호환되는 Spring Cloud 버전
}

dependencies {
	implementation("io.reactivex.rxjava2:rxjava:2.2.0")
	implementation("io.projectreactor:reactor-core")
	implementation('org.springframework.boot:spring-boot-autoconfigure')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	implementation('org.springframework.cloud:spring-cloud-stream-reactive')
	implementation('org.springframework.boot:spring-boot-starter-actuator')

	implementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo')

	implementation("io.projectreactor.addons:reactor-extra:${reactorExtraVersion}")

	compileOnly('org.projectlombok:lombok')
	implementation 'org.codehaus.groovy:groovy:2.5.14'

	testImplementation("io.projectreactor:reactor-test")
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
